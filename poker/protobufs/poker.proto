syntax = "proto3";

package poker;

service Poker {
    rpc CreatePlayer(Player) returns (Player){}
    rpc CreatePlayers(Players) returns (Players){}
    rpc GetPlayer(Player) returns (Player){}
    rpc GetPlayerByName(Player) returns (Player){}
    rpc CreateGame(Game) returns (Game){}
    rpc GetGame(Game) returns (Game){}
    rpc GetGamePlayersByGameId(Game) returns (Players){}
    rpc GetGameByName(Game) returns (Game){}
    rpc SetGamePlayers(Game) returns (Players){}
    rpc GetPlayersByName(Players) returns(Players){}
    rpc SitGamePlayers(Game) returns (Game){}
    // Allocate players to a table slot.
    rpc SetPlayerSlot(Player) returns (Player){}
    // allocate slots based on the players in a game
    // TODO: Define server method
    rpc AllocateGameSlots(Game) returns (Game){}
}

message Card {
    enum Suit {
        UNKNOWN_SUIT = 0;
        HEARTS = 1;
        DIAMONDS = 2;
        CLUBS = 3;
        SPADES = 4;
    }

    enum Rank {
        UNKNOWN_RANK = 0;
        ACE = 1;
        TWO = 2;
        THREE = 3;
        FOUR = 4;
        FIVE = 5;
        SIX = 6;
        SEVEN = 7;
        EIGHT = 8;
        NINE = 9;
        TEN = 10;
        JACK = 11;
        QUEEN = 12;
        KING = 13;
    }

    Suit suit = 1;
    Rank rank = 2;
}



message Deck {
    repeated Card cards = 1;
}

message Player {
    int64 id = 1;
    string name = 2;
    int64 chips = 3;
    Hand hand = 4;
    // What seat at the table they are at 1-8 only
    int64 slot = 5;
}

message Players {
    repeated Player players= 1;
}

message Hand {
    Card one = 1;
    Card two = 2;
}

message Flop {
    Card one = 1;
    Card two = 2;
    Card three =3;
    Card four =4;
    Card five =5;
}


message Game {
    Players players = 1;
    string name = 2;

    int64 id = 9;
    int64 small = 10;
    int64 big = 11;
    int64 Dealer = 12;
    repeated Card deck = 13;
    Flop flop = 15;
}
//   protoc -I poker/ poker/protobufs/poker.proto --go_out=plugins=grpc:poker